plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.1'
}

group 'ru.netology'
version '1.0-SNAPSHOT'

allure {
    autoconfigure = true
    version = '2.13.8' // Latest Allure Version
    useJUnit5 {
        version = '2.13.8' // Latest Allure Version
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "http://dl.bintray.com/epam/reportportal" }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.1'
    testImplementation 'com.codeborne:selenide:5.17.4'
    testImplementation 'com.github.javafaker:javafaker:1.0.1'
    compileOnly 'org.projectlombok:lombok:1.18.18'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    testImplementation 'mysql:mysql-connector-java:8.0.18'
    testImplementation 'postgresql:postgresql:9.0-801.jdbc4'
    testImplementation 'io.qameta.allure:allure-selenide:2.13.3'
    testImplementation 'commons-dbutils:commons-dbutils:1.7'
    testRuntimeOnly 'org.slf4j:slf4j-simple:1.7.30'
    implementation 'com.epam.reportportal:agent-java-junit5:5.0.0'
    implementation 'com.epam.reportportal:logger-java-logback:5.0.2'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'com.epam.reportportal:logger-java-log4j:5.0.2'
    compileOnly 'log4j:log4j:1.2.17'
    implementation 'org.apache.logging.log4j:log4j-api:2.13.3'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.3'
}


test {
    useJUnitPlatform()
    // в тестах, вызывая `gradlew test -Dselenide.headless=true` будем передавать этот параметр в JVM (где его подтянет Selenide)
    testLogging.showStandardStreams = true
    useJUnitPlatform()
    systemProperty 'selenide.headless', System.getProperty('selenide.headless')
    systemProperty 'selenide.browser', 'chrome'
    systemProperty 'junit.jupiter.extensions.autodetection.enabled', true


    systemProperty 'url', System.getProperty('url', 'jdbc:mysql://192.168.99.100:3306/app')
    systemProperty 'user', System.getProperty('user', 'app')
    systemProperty 'password', System.getProperty('password', 'pass')
    systemProperty 'host', System.getProperty('host', 'http://localhost:8080')
}
